#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥–µ–ª—è–º
sys.path.append(os.path.join(os.path.dirname(__file__), 'models'))

from flask import Flask
from stockmann_models import db, Store, IncidentCategory, IncidentSubcategory, Department, User

def check_data():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ"""
    
    app = Flask(__name__)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    from dotenv import load_dotenv
    load_dotenv()
    
    db_name = os.getenv('DB_NAME', 'stockmann_incidents')
    db_user = os.getenv('DB_USER', 'postgres')
    db_password = os.getenv('DB_PASSWORD', '1234')
    db_host = os.getenv('DB_HOST', 'localhost')
    db_port = os.getenv('DB_PORT', '5432')
    
    app.config['SQLALCHEMY_DATABASE_URI'] = f'postgresql://{db_user}:{db_password}@{db_host}:{db_port}/{db_name}'
    app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
    
    db.init_app(app)
    
    with app.app_context():
        try:
            print("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ:")
            print("-" * 40)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–≥–∞–∑–∏–Ω—ã
            stores = Store.query.all()
            print(f"üè™ –ú–∞–≥–∞–∑–∏–Ω—ã: {len(stores)}")
            for store in stores[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"   - {store.code}: {store.name}")
            if len(stores) > 5:
                print(f"   ... –∏ –µ—â–µ {len(stores) - 5}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            categories = IncidentCategory.query.all()
            print(f"\nüìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {len(categories)}")
            for cat in categories[:5]:
                print(f"   - {cat.code}: {cat.name}")
            if len(categories) > 5:
                print(f"   ... –∏ –µ—â–µ {len(categories) - 5}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            subcategories = IncidentSubcategory.query.all()
            print(f"\nüìã –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {len(subcategories)}")
            for subcat in subcategories[:5]:
                print(f"   - {subcat.code}: {subcat.name} (SLA: {subcat.sla_hours}—á)")
            if len(subcategories) > 5:
                print(f"   ... –∏ –µ—â–µ {len(subcategories) - 5}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–¥–µ–ª—ã
            departments = Department.query.all()
            print(f"\nüè¨ –û—Ç–¥–µ–ª—ã: {len(departments)}")
            for dept in departments[:5]:
                print(f"   - {dept.code}: {dept.name}")
            if len(departments) > 5:
                print(f"   ... –∏ –µ—â–µ {len(departments) - 5}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            users = User.query.all()
            print(f"\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {len(users)}")
            for user in users[:5]:
                print(f"   - {user.username}: {user.full_name} ({user.role})")
            if len(users) > 5:
                print(f"   ... –∏ –µ—â–µ {len(users) - 5}")
            
            print("\n" + "=" * 40)
            
            if len(stores) == 0 or len(categories) == 0:
                print("‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã! –ó–∞–ø—É—Å—Ç–∏—Ç–µ:")
                print("   python database/load_basic_data.py")
                return False
            else:
                print("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
                return True
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
            return False

if __name__ == '__main__':
    success = check_data()
    sys.exit(0 if success else 1)